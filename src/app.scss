/* Write your global styles here, in SCSS syntax. Variables and mixins from the src/variables.scss file are available here without importing */ /* Import only what you need from Bootstrap */
@import './variables.scss';
@import 'node_modules/bootstrap/scss/bootstrap.scss';

@import '@fontsource/fira-mono';


#svelte {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

h1,
h2,
p {
  font-weight: 400;
  color: var(--heading-color);
}

p {
  line-height: 1.5;
}

a {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1rem;
}

pre {
  font-size: 16px;
  font-family: var(--font-mono);
  background-color: rgba(255, 255, 255, 0.45);
  border-radius: 3px;
  box-shadow: 2px 2px 6px rgb(255 255 255 / 25%);
  padding: 0.5em;
  overflow-x: auto;
  color: #428bca;
}

input,
button {
  font-size: inherit;
  font-family: inherit;
}

button:focus:not(:focus-visible) {
  outline: none;
}

@media (min-width: 720px) {
  h1 {
    font-size: 2.4rem;
  }
}

.text-small {
  font-size: small;
}
.pointer {
  cursor: pointer;
}
.border-right {
  border-right: 1pt solid #444444;
}
.source-modal {
  padding: 10px 40px;
  overflow-y: auto;
  max-height: 400px;
  border-radius: 10px;
  margin: 5% 5%;
  text-align: left;
  color: #000;
  background: white;
  border: 1pt solid #aeaeae;
  border-radius: 10px;
}
.source-code {
  padding: 10px 10px;
  overflow-y: auto;
  min-height: 600px;
  border-radius: 10px;
  text-align: left;
  color: #000;
  background: #cecece;
  border: 1pt solid #aeaeae;
  border-radius: 10px;
}
.content {
  width: 100%;
  max-width: var(--column-width);
  margin: var(--column-margin-top) auto 0 auto;
}
.outline-light {
  border: 1pt solid #ccc!important;
}

.jumbo {
  width: 80%;
  background: #eaeaea;
  margin: 10px auto;
  padding: 10px;
  text-align: center;
  border-radius: 10px;
}

/* Prismjs styles for pretty Clarity */
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: slategray;
}

.token.punctuation {
	color: #999;
}

.token.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
	color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
	color: #9a6e3a;
}

.token.atrule,
.token.attr-value,
.token.keyword {
	color: #07a;
}

.token.function,
.token.class-name {
	color: #DD4A68;
}

.token.regex,
.token.important,
.token.variable {
	color: #e90;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}
